ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all ;

entity contador0 is
 port (clock, reset, enable : in std_logic;
       q:out std_logic_vector(3 downto 0) );
end contador0;

architecture comportamental of contador0 is
signal contagem : std_logic_vector(3 downto 0);
begin
 process(clock,reset)
 begin
  if (reset ='0') then
      contagem <= "0000";
  elsif( clock'event and clock='0') then
   if enable ='1' then
    contagem <= contagem + '1';
   end if; 
  end if;
  q <= contagem ;
end process;

end comportamental;

--------------------------------------------------------------------------------

-- contador de 4 bits por transiÃ§Ã£o negativa
-- e reset assincrono,usando signal
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all ;

entity contador1 is
 port (clock, reset, enable : in std_logic;
       q: buffer std_logic_vector(3 downto 0) );
end contador1;

architecture comportamental of contador1 is
begin
 process(clock,reset)
 begin
  if (reset ='0') then
      q <= "0000";
  elsif( clock'event and clock='0') then
   if enable ='1' then
    q <= q + '1';
   end if; 
  end if;
end process;

end comportamental;

--------------------------------------------------------------------------------
-- contador de 4 bits por transição negativa
-- e reset Sincrono,usando signal
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all ;

entity contador2 is
 port (clock, reset, enable : in std_logic;
       q:out std_logic_vector(3 downto 0) );
end contador2;

architecture comportamental of contador2 is
signal contagem : std_logic_vector(3 downto 0);
begin
 process(clock,reset)
 begin
  if( clock'event and clock='0') then
   if  (reset ='0') then
      contagem <= "0000";
   elsif enable ='1' then
    contagem <= contagem + '1';
   end if; 
  end if;
  q <= contagem ;
end process;

end comportamental;
----------------------------------------------------------------------------

-- contador de 4 bits por transicao positiva
-- e reset assincrono,usando variavel
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all ;

entity contador3 is
 port (clock, reset, enable : in std_logic;
       q:out std_logic_vector(3 downto 0) );
end contador3;

architecture comportamental of contador3 is
begin
 process(clock,reset)
 variable contagem : std_logic_vector(3 downto 0);
 begin
  if (reset ='0') then
      contagem := "0000";
  elsif( clock'event and clock='1') then -- clock ='1' implica transicao positiva
   if enable ='1' then
    contagem := contagem + '1';
   end if; 
  end if;
  q <= contagem ;
end process;

end comportamental;

